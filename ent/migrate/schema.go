// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AddressColumns holds the columns for the "address" table.
	AddressColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "chain_id", Type: field.TypeUint64},
		{Name: "address", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "uuid", Type: field.TypeString},
		{Name: "use_to", Type: field.TypeInt64},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// AddressTable holds the schema information for the "address" table.
	AddressTable = &schema.Table{
		Name:       "address",
		Columns:    AddressColumns,
		PrimaryKey: []*schema.Column{AddressColumns[0]},
	}
	// ApprunColumns holds the columns for the "apprun" table.
	ApprunColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "handler", Type: field.TypeString, Unique: true},
		{Name: "runing", Type: field.TypeUint64, Default: 0},
		{Name: "total", Type: field.TypeUint64, Default: 0},
	}
	// ApprunTable holds the schema information for the "apprun" table.
	ApprunTable = &schema.Table{
		Name:       "apprun",
		Columns:    ApprunColumns,
		PrimaryKey: []*schema.Column{ApprunColumns[0]},
	}
	// BalanceColumns holds the columns for the "balance" table.
	BalanceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "chain_id", Type: field.TypeUint64},
		{Name: "product_id", Type: field.TypeUint64},
		{Name: "balance_amount", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(32,0)"}},
		{Name: "balance_freeze", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(32,0)"}},
		{Name: "total_deposit", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(32,0)"}},
		{Name: "total_withdraw", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(32,0)"}},
		{Name: "count_deposit", Type: field.TypeUint64},
		{Name: "count_withdraw", Type: field.TypeUint64},
		{Name: "change_logs", Type: field.TypeJSON},
		{Name: "version", Type: field.TypeInt64},
	}
	// BalanceTable holds the schema information for the "balance" table.
	BalanceTable = &schema.Table{
		Name:       "balance",
		Columns:    BalanceColumns,
		PrimaryKey: []*schema.Column{BalanceColumns[0]},
	}
	// BlockchainColumns holds the columns for the "blockchain" table.
	BlockchainColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "chain", Type: field.TypeString},
		{Name: "types", Type: field.TypeString},
		{Name: "symbol", Type: field.TypeString},
		{Name: "decimals", Type: field.TypeInt64},
		{Name: "status", Type: field.TypeInt64},
		{Name: "token_address", Type: field.TypeString},
		{Name: "token_abi", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "text"}},
		{Name: "cold_address", Type: field.TypeString},
		{Name: "hot_address", Type: field.TypeString},
		{Name: "scan_block_num", Type: field.TypeInt64},
		{Name: "min_free_num", Type: field.TypeInt64},
		{Name: "min_confirm_num", Type: field.TypeInt64},
		{Name: "withdraw_fee", Type: field.TypeFloat64},
		{Name: "withdraw_fee_type", Type: field.TypeInt64},
		{Name: "min_deposit", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(32,0)"}},
		{Name: "min_withdraw", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(32,0)"}},
		{Name: "min_collect", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(32,0)"}},
		{Name: "gas_price", Type: field.TypeJSON, Nullable: true},
	}
	// BlockchainTable holds the schema information for the "blockchain" table.
	BlockchainTable = &schema.Table{
		Name:       "blockchain",
		Columns:    BlockchainColumns,
		PrimaryKey: []*schema.Column{BlockchainColumns[0]},
	}
	// NotifyColumns holds the columns for the "notify" table.
	NotifyColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "chain_id", Type: field.TypeUint64},
		{Name: "product_id", Type: field.TypeUint64},
		{Name: "item_from", Type: field.TypeUint64},
		{Name: "item_type", Type: field.TypeInt64},
		{Name: "nonce", Type: field.TypeString},
		{Name: "notify_type", Type: field.TypeString},
		{Name: "send_url", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "send_body", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "send_retry", Type: field.TypeInt64},
		{Name: "handle_status", Type: field.TypeInt64, Default: 0},
		{Name: "handle_msg", Type: field.TypeString, Default: "init"},
		{Name: "handle_time", Type: field.TypeTime, Nullable: true},
	}
	// NotifyTable holds the schema information for the "notify" table.
	NotifyTable = &schema.Table{
		Name:       "notify",
		Columns:    NotifyColumns,
		PrimaryKey: []*schema.Column{NotifyColumns[0]},
	}
	// ProductColumns holds the columns for the "product" table.
	ProductColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeString, Unique: true},
		{Name: "app_name", Type: field.TypeString},
		{Name: "app_secret", Type: field.TypeString},
		{Name: "app_status", Type: field.TypeInt64},
		{Name: "withdraw_status", Type: field.TypeInt64},
		{Name: "web_hook", Type: field.TypeString},
	}
	// ProductTable holds the schema information for the "product" table.
	ProductTable = &schema.Table{
		Name:       "product",
		Columns:    ProductColumns,
		PrimaryKey: []*schema.Column{ProductColumns[0]},
	}
	// TransferColumns holds the columns for the "transfer" table.
	TransferColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "related_type", Type: field.TypeInt64},
		{Name: "related_id", Type: field.TypeUint64},
		{Name: "chain_id", Type: field.TypeUint64},
		{Name: "tx_id", Type: field.TypeString},
		{Name: "from_address", Type: field.TypeString},
		{Name: "to_address", Type: field.TypeString},
		{Name: "amount_str", Type: field.TypeString},
		{Name: "amount_raw", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(32,0)"}},
		{Name: "handle_status", Type: field.TypeInt64, Default: 0},
		{Name: "handle_msg", Type: field.TypeString, Default: "init"},
		{Name: "handle_time", Type: field.TypeTime, Nullable: true},
		{Name: "gas", Type: field.TypeInt64},
		{Name: "gas_price", Type: field.TypeInt64},
		{Name: "nonce", Type: field.TypeInt64},
		{Name: "hex", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(1024)"}},
	}
	// TransferTable holds the schema information for the "transfer" table.
	TransferTable = &schema.Table{
		Name:       "transfer",
		Columns:    TransferColumns,
		PrimaryKey: []*schema.Column{TransferColumns[0]},
	}
	// TxnColumns holds the columns for the "txn" table.
	TxnColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "tx_id", Type: field.TypeString, Unique: true},
		{Name: "chain_id", Type: field.TypeUint64},
		{Name: "product_id", Type: field.TypeInt64},
		{Name: "from_address", Type: field.TypeString},
		{Name: "to_address", Type: field.TypeString},
		{Name: "amount_str", Type: field.TypeString},
		{Name: "amount_raw", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(32,0)"}},
		{Name: "handle_status", Type: field.TypeInt64, Default: 0},
		{Name: "handle_msg", Type: field.TypeString, Nullable: true},
		{Name: "handle_time", Type: field.TypeTime, Nullable: true},
		{Name: "collect_status", Type: field.TypeInt64, Default: 0},
		{Name: "collect_msg", Type: field.TypeString, Nullable: true},
		{Name: "collect_time", Type: field.TypeTime, Nullable: true},
	}
	// TxnTable holds the schema information for the "txn" table.
	TxnTable = &schema.Table{
		Name:       "txn",
		Columns:    TxnColumns,
		PrimaryKey: []*schema.Column{TxnColumns[0]},
	}
	// UserColumns holds the columns for the "user" table.
	UserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "role", Type: field.TypeInt64},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "auth_google", Type: field.TypeString},
		{Name: "auth_token", Type: field.TypeString},
		{Name: "setting", Type: field.TypeString},
	}
	// UserTable holds the schema information for the "user" table.
	UserTable = &schema.Table{
		Name:       "user",
		Columns:    UserColumns,
		PrimaryKey: []*schema.Column{UserColumns[0]},
	}
	// WithdrawColumns holds the columns for the "withdraw" table.
	WithdrawColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "product_id", Type: field.TypeInt64},
		{Name: "chain_id", Type: field.TypeUint64},
		{Name: "to_address", Type: field.TypeString},
		{Name: "amount_str", Type: field.TypeString},
		{Name: "amount_raw", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(32,0)"}},
		{Name: "serial_id", Type: field.TypeString},
		{Name: "tx_hash", Type: field.TypeString, Nullable: true},
		{Name: "handle_status", Type: field.TypeInt64, Default: 0},
		{Name: "handle_msg", Type: field.TypeString, Nullable: true},
		{Name: "handle_time", Type: field.TypeTime, Nullable: true},
	}
	// WithdrawTable holds the schema information for the "withdraw" table.
	WithdrawTable = &schema.Table{
		Name:       "withdraw",
		Columns:    WithdrawColumns,
		PrimaryKey: []*schema.Column{WithdrawColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AddressTable,
		ApprunTable,
		BalanceTable,
		BlockchainTable,
		NotifyTable,
		ProductTable,
		TransferTable,
		TxnTable,
		UserTable,
		WithdrawTable,
	}
)

func init() {
	AddressTable.Annotation = &entsql.Annotation{
		Table: "address",
	}
	ApprunTable.Annotation = &entsql.Annotation{
		Table: "apprun",
	}
	BalanceTable.Annotation = &entsql.Annotation{
		Table: "balance",
	}
	BlockchainTable.Annotation = &entsql.Annotation{
		Table: "blockchain",
	}
	NotifyTable.Annotation = &entsql.Annotation{
		Table: "notify",
	}
	ProductTable.Annotation = &entsql.Annotation{
		Table: "product",
	}
	TransferTable.Annotation = &entsql.Annotation{
		Table: "transfer",
	}
	TxnTable.Annotation = &entsql.Annotation{
		Table: "txn",
	}
	UserTable.Annotation = &entsql.Annotation{
		Table: "user",
	}
	WithdrawTable.Annotation = &entsql.Annotation{
		Table: "withdraw",
	}
}
