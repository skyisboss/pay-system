// Code generated by ent, DO NOT EDIT.

package tsession

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the tsession type in the database.
	Label = "tsession"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldKeyName holds the string denoting the key_name field in the database.
	FieldKeyName = "key_name"
	// FieldKeyValue holds the string denoting the key_value field in the database.
	FieldKeyValue = "key_value"
	// FieldIP holds the string denoting the ip field in the database.
	FieldIP = "ip"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the tsession in the database.
	Table = "t_session"
)

// Columns holds all SQL columns for tsession fields.
var Columns = []string{
	FieldID,
	FieldKeyName,
	FieldKeyValue,
	FieldIP,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the TSession queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByKeyName orders the results by the key_name field.
func ByKeyName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldKeyName, opts...).ToFunc()
}

// ByKeyValue orders the results by the key_value field.
func ByKeyValue(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldKeyValue, opts...).ToFunc()
}

// ByIP orders the results by the ip field.
func ByIP(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIP, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}
