// Code generated by ent, DO NOT EDIT.

package transfer

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/shopspring/decimal"
	"github.com/skyisboss/pay-system/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldDeletedAt, v))
}

// RelatedType applies equality check predicate on the "related_type" field. It's identical to RelatedTypeEQ.
func RelatedType(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldRelatedType, v))
}

// RelatedID applies equality check predicate on the "related_id" field. It's identical to RelatedIDEQ.
func RelatedID(v uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldRelatedID, v))
}

// ChainID applies equality check predicate on the "chain_id" field. It's identical to ChainIDEQ.
func ChainID(v uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldChainID, v))
}

// TxID applies equality check predicate on the "tx_id" field. It's identical to TxIDEQ.
func TxID(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldTxID, v))
}

// FromAddress applies equality check predicate on the "from_address" field. It's identical to FromAddressEQ.
func FromAddress(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldFromAddress, v))
}

// ToAddress applies equality check predicate on the "to_address" field. It's identical to ToAddressEQ.
func ToAddress(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldToAddress, v))
}

// AmountStr applies equality check predicate on the "amount_str" field. It's identical to AmountStrEQ.
func AmountStr(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldAmountStr, v))
}

// AmountRaw applies equality check predicate on the "amount_raw" field. It's identical to AmountRawEQ.
func AmountRaw(v decimal.Decimal) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldAmountRaw, v))
}

// HandleStatus applies equality check predicate on the "handle_status" field. It's identical to HandleStatusEQ.
func HandleStatus(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldHandleStatus, v))
}

// HandleMsg applies equality check predicate on the "handle_msg" field. It's identical to HandleMsgEQ.
func HandleMsg(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldHandleMsg, v))
}

// HandleTime applies equality check predicate on the "handle_time" field. It's identical to HandleTimeEQ.
func HandleTime(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldHandleTime, v))
}

// Gas applies equality check predicate on the "gas" field. It's identical to GasEQ.
func Gas(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldGas, v))
}

// GasPrice applies equality check predicate on the "gas_price" field. It's identical to GasPriceEQ.
func GasPrice(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldGasPrice, v))
}

// Nonce applies equality check predicate on the "nonce" field. It's identical to NonceEQ.
func Nonce(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldNonce, v))
}

// Hex applies equality check predicate on the "hex" field. It's identical to HexEQ.
func Hex(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldHex, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.Transfer {
	return predicate.Transfer(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.Transfer {
	return predicate.Transfer(sql.FieldNotNull(FieldUpdatedAt))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.Transfer {
	return predicate.Transfer(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.Transfer {
	return predicate.Transfer(sql.FieldNotNull(FieldDeletedAt))
}

// RelatedTypeEQ applies the EQ predicate on the "related_type" field.
func RelatedTypeEQ(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldRelatedType, v))
}

// RelatedTypeNEQ applies the NEQ predicate on the "related_type" field.
func RelatedTypeNEQ(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldRelatedType, v))
}

// RelatedTypeIn applies the In predicate on the "related_type" field.
func RelatedTypeIn(vs ...int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldRelatedType, vs...))
}

// RelatedTypeNotIn applies the NotIn predicate on the "related_type" field.
func RelatedTypeNotIn(vs ...int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldRelatedType, vs...))
}

// RelatedTypeGT applies the GT predicate on the "related_type" field.
func RelatedTypeGT(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldRelatedType, v))
}

// RelatedTypeGTE applies the GTE predicate on the "related_type" field.
func RelatedTypeGTE(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldRelatedType, v))
}

// RelatedTypeLT applies the LT predicate on the "related_type" field.
func RelatedTypeLT(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldRelatedType, v))
}

// RelatedTypeLTE applies the LTE predicate on the "related_type" field.
func RelatedTypeLTE(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldRelatedType, v))
}

// RelatedIDEQ applies the EQ predicate on the "related_id" field.
func RelatedIDEQ(v uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldRelatedID, v))
}

// RelatedIDNEQ applies the NEQ predicate on the "related_id" field.
func RelatedIDNEQ(v uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldRelatedID, v))
}

// RelatedIDIn applies the In predicate on the "related_id" field.
func RelatedIDIn(vs ...uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldRelatedID, vs...))
}

// RelatedIDNotIn applies the NotIn predicate on the "related_id" field.
func RelatedIDNotIn(vs ...uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldRelatedID, vs...))
}

// RelatedIDGT applies the GT predicate on the "related_id" field.
func RelatedIDGT(v uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldRelatedID, v))
}

// RelatedIDGTE applies the GTE predicate on the "related_id" field.
func RelatedIDGTE(v uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldRelatedID, v))
}

// RelatedIDLT applies the LT predicate on the "related_id" field.
func RelatedIDLT(v uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldRelatedID, v))
}

// RelatedIDLTE applies the LTE predicate on the "related_id" field.
func RelatedIDLTE(v uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldRelatedID, v))
}

// ChainIDEQ applies the EQ predicate on the "chain_id" field.
func ChainIDEQ(v uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldChainID, v))
}

// ChainIDNEQ applies the NEQ predicate on the "chain_id" field.
func ChainIDNEQ(v uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldChainID, v))
}

// ChainIDIn applies the In predicate on the "chain_id" field.
func ChainIDIn(vs ...uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldChainID, vs...))
}

// ChainIDNotIn applies the NotIn predicate on the "chain_id" field.
func ChainIDNotIn(vs ...uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldChainID, vs...))
}

// ChainIDGT applies the GT predicate on the "chain_id" field.
func ChainIDGT(v uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldChainID, v))
}

// ChainIDGTE applies the GTE predicate on the "chain_id" field.
func ChainIDGTE(v uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldChainID, v))
}

// ChainIDLT applies the LT predicate on the "chain_id" field.
func ChainIDLT(v uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldChainID, v))
}

// ChainIDLTE applies the LTE predicate on the "chain_id" field.
func ChainIDLTE(v uint64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldChainID, v))
}

// TxIDEQ applies the EQ predicate on the "tx_id" field.
func TxIDEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldTxID, v))
}

// TxIDNEQ applies the NEQ predicate on the "tx_id" field.
func TxIDNEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldTxID, v))
}

// TxIDIn applies the In predicate on the "tx_id" field.
func TxIDIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldTxID, vs...))
}

// TxIDNotIn applies the NotIn predicate on the "tx_id" field.
func TxIDNotIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldTxID, vs...))
}

// TxIDGT applies the GT predicate on the "tx_id" field.
func TxIDGT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldTxID, v))
}

// TxIDGTE applies the GTE predicate on the "tx_id" field.
func TxIDGTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldTxID, v))
}

// TxIDLT applies the LT predicate on the "tx_id" field.
func TxIDLT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldTxID, v))
}

// TxIDLTE applies the LTE predicate on the "tx_id" field.
func TxIDLTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldTxID, v))
}

// TxIDContains applies the Contains predicate on the "tx_id" field.
func TxIDContains(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContains(FieldTxID, v))
}

// TxIDHasPrefix applies the HasPrefix predicate on the "tx_id" field.
func TxIDHasPrefix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasPrefix(FieldTxID, v))
}

// TxIDHasSuffix applies the HasSuffix predicate on the "tx_id" field.
func TxIDHasSuffix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasSuffix(FieldTxID, v))
}

// TxIDEqualFold applies the EqualFold predicate on the "tx_id" field.
func TxIDEqualFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEqualFold(FieldTxID, v))
}

// TxIDContainsFold applies the ContainsFold predicate on the "tx_id" field.
func TxIDContainsFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContainsFold(FieldTxID, v))
}

// FromAddressEQ applies the EQ predicate on the "from_address" field.
func FromAddressEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldFromAddress, v))
}

// FromAddressNEQ applies the NEQ predicate on the "from_address" field.
func FromAddressNEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldFromAddress, v))
}

// FromAddressIn applies the In predicate on the "from_address" field.
func FromAddressIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldFromAddress, vs...))
}

// FromAddressNotIn applies the NotIn predicate on the "from_address" field.
func FromAddressNotIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldFromAddress, vs...))
}

// FromAddressGT applies the GT predicate on the "from_address" field.
func FromAddressGT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldFromAddress, v))
}

// FromAddressGTE applies the GTE predicate on the "from_address" field.
func FromAddressGTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldFromAddress, v))
}

// FromAddressLT applies the LT predicate on the "from_address" field.
func FromAddressLT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldFromAddress, v))
}

// FromAddressLTE applies the LTE predicate on the "from_address" field.
func FromAddressLTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldFromAddress, v))
}

// FromAddressContains applies the Contains predicate on the "from_address" field.
func FromAddressContains(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContains(FieldFromAddress, v))
}

// FromAddressHasPrefix applies the HasPrefix predicate on the "from_address" field.
func FromAddressHasPrefix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasPrefix(FieldFromAddress, v))
}

// FromAddressHasSuffix applies the HasSuffix predicate on the "from_address" field.
func FromAddressHasSuffix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasSuffix(FieldFromAddress, v))
}

// FromAddressEqualFold applies the EqualFold predicate on the "from_address" field.
func FromAddressEqualFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEqualFold(FieldFromAddress, v))
}

// FromAddressContainsFold applies the ContainsFold predicate on the "from_address" field.
func FromAddressContainsFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContainsFold(FieldFromAddress, v))
}

// ToAddressEQ applies the EQ predicate on the "to_address" field.
func ToAddressEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldToAddress, v))
}

// ToAddressNEQ applies the NEQ predicate on the "to_address" field.
func ToAddressNEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldToAddress, v))
}

// ToAddressIn applies the In predicate on the "to_address" field.
func ToAddressIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldToAddress, vs...))
}

// ToAddressNotIn applies the NotIn predicate on the "to_address" field.
func ToAddressNotIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldToAddress, vs...))
}

// ToAddressGT applies the GT predicate on the "to_address" field.
func ToAddressGT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldToAddress, v))
}

// ToAddressGTE applies the GTE predicate on the "to_address" field.
func ToAddressGTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldToAddress, v))
}

// ToAddressLT applies the LT predicate on the "to_address" field.
func ToAddressLT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldToAddress, v))
}

// ToAddressLTE applies the LTE predicate on the "to_address" field.
func ToAddressLTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldToAddress, v))
}

// ToAddressContains applies the Contains predicate on the "to_address" field.
func ToAddressContains(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContains(FieldToAddress, v))
}

// ToAddressHasPrefix applies the HasPrefix predicate on the "to_address" field.
func ToAddressHasPrefix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasPrefix(FieldToAddress, v))
}

// ToAddressHasSuffix applies the HasSuffix predicate on the "to_address" field.
func ToAddressHasSuffix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasSuffix(FieldToAddress, v))
}

// ToAddressEqualFold applies the EqualFold predicate on the "to_address" field.
func ToAddressEqualFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEqualFold(FieldToAddress, v))
}

// ToAddressContainsFold applies the ContainsFold predicate on the "to_address" field.
func ToAddressContainsFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContainsFold(FieldToAddress, v))
}

// AmountStrEQ applies the EQ predicate on the "amount_str" field.
func AmountStrEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldAmountStr, v))
}

// AmountStrNEQ applies the NEQ predicate on the "amount_str" field.
func AmountStrNEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldAmountStr, v))
}

// AmountStrIn applies the In predicate on the "amount_str" field.
func AmountStrIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldAmountStr, vs...))
}

// AmountStrNotIn applies the NotIn predicate on the "amount_str" field.
func AmountStrNotIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldAmountStr, vs...))
}

// AmountStrGT applies the GT predicate on the "amount_str" field.
func AmountStrGT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldAmountStr, v))
}

// AmountStrGTE applies the GTE predicate on the "amount_str" field.
func AmountStrGTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldAmountStr, v))
}

// AmountStrLT applies the LT predicate on the "amount_str" field.
func AmountStrLT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldAmountStr, v))
}

// AmountStrLTE applies the LTE predicate on the "amount_str" field.
func AmountStrLTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldAmountStr, v))
}

// AmountStrContains applies the Contains predicate on the "amount_str" field.
func AmountStrContains(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContains(FieldAmountStr, v))
}

// AmountStrHasPrefix applies the HasPrefix predicate on the "amount_str" field.
func AmountStrHasPrefix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasPrefix(FieldAmountStr, v))
}

// AmountStrHasSuffix applies the HasSuffix predicate on the "amount_str" field.
func AmountStrHasSuffix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasSuffix(FieldAmountStr, v))
}

// AmountStrEqualFold applies the EqualFold predicate on the "amount_str" field.
func AmountStrEqualFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEqualFold(FieldAmountStr, v))
}

// AmountStrContainsFold applies the ContainsFold predicate on the "amount_str" field.
func AmountStrContainsFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContainsFold(FieldAmountStr, v))
}

// AmountRawEQ applies the EQ predicate on the "amount_raw" field.
func AmountRawEQ(v decimal.Decimal) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldAmountRaw, v))
}

// AmountRawNEQ applies the NEQ predicate on the "amount_raw" field.
func AmountRawNEQ(v decimal.Decimal) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldAmountRaw, v))
}

// AmountRawIn applies the In predicate on the "amount_raw" field.
func AmountRawIn(vs ...decimal.Decimal) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldAmountRaw, vs...))
}

// AmountRawNotIn applies the NotIn predicate on the "amount_raw" field.
func AmountRawNotIn(vs ...decimal.Decimal) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldAmountRaw, vs...))
}

// AmountRawGT applies the GT predicate on the "amount_raw" field.
func AmountRawGT(v decimal.Decimal) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldAmountRaw, v))
}

// AmountRawGTE applies the GTE predicate on the "amount_raw" field.
func AmountRawGTE(v decimal.Decimal) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldAmountRaw, v))
}

// AmountRawLT applies the LT predicate on the "amount_raw" field.
func AmountRawLT(v decimal.Decimal) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldAmountRaw, v))
}

// AmountRawLTE applies the LTE predicate on the "amount_raw" field.
func AmountRawLTE(v decimal.Decimal) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldAmountRaw, v))
}

// HandleStatusEQ applies the EQ predicate on the "handle_status" field.
func HandleStatusEQ(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldHandleStatus, v))
}

// HandleStatusNEQ applies the NEQ predicate on the "handle_status" field.
func HandleStatusNEQ(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldHandleStatus, v))
}

// HandleStatusIn applies the In predicate on the "handle_status" field.
func HandleStatusIn(vs ...int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldHandleStatus, vs...))
}

// HandleStatusNotIn applies the NotIn predicate on the "handle_status" field.
func HandleStatusNotIn(vs ...int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldHandleStatus, vs...))
}

// HandleStatusGT applies the GT predicate on the "handle_status" field.
func HandleStatusGT(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldHandleStatus, v))
}

// HandleStatusGTE applies the GTE predicate on the "handle_status" field.
func HandleStatusGTE(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldHandleStatus, v))
}

// HandleStatusLT applies the LT predicate on the "handle_status" field.
func HandleStatusLT(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldHandleStatus, v))
}

// HandleStatusLTE applies the LTE predicate on the "handle_status" field.
func HandleStatusLTE(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldHandleStatus, v))
}

// HandleMsgEQ applies the EQ predicate on the "handle_msg" field.
func HandleMsgEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldHandleMsg, v))
}

// HandleMsgNEQ applies the NEQ predicate on the "handle_msg" field.
func HandleMsgNEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldHandleMsg, v))
}

// HandleMsgIn applies the In predicate on the "handle_msg" field.
func HandleMsgIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldHandleMsg, vs...))
}

// HandleMsgNotIn applies the NotIn predicate on the "handle_msg" field.
func HandleMsgNotIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldHandleMsg, vs...))
}

// HandleMsgGT applies the GT predicate on the "handle_msg" field.
func HandleMsgGT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldHandleMsg, v))
}

// HandleMsgGTE applies the GTE predicate on the "handle_msg" field.
func HandleMsgGTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldHandleMsg, v))
}

// HandleMsgLT applies the LT predicate on the "handle_msg" field.
func HandleMsgLT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldHandleMsg, v))
}

// HandleMsgLTE applies the LTE predicate on the "handle_msg" field.
func HandleMsgLTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldHandleMsg, v))
}

// HandleMsgContains applies the Contains predicate on the "handle_msg" field.
func HandleMsgContains(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContains(FieldHandleMsg, v))
}

// HandleMsgHasPrefix applies the HasPrefix predicate on the "handle_msg" field.
func HandleMsgHasPrefix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasPrefix(FieldHandleMsg, v))
}

// HandleMsgHasSuffix applies the HasSuffix predicate on the "handle_msg" field.
func HandleMsgHasSuffix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasSuffix(FieldHandleMsg, v))
}

// HandleMsgEqualFold applies the EqualFold predicate on the "handle_msg" field.
func HandleMsgEqualFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEqualFold(FieldHandleMsg, v))
}

// HandleMsgContainsFold applies the ContainsFold predicate on the "handle_msg" field.
func HandleMsgContainsFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContainsFold(FieldHandleMsg, v))
}

// HandleTimeEQ applies the EQ predicate on the "handle_time" field.
func HandleTimeEQ(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldHandleTime, v))
}

// HandleTimeNEQ applies the NEQ predicate on the "handle_time" field.
func HandleTimeNEQ(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldHandleTime, v))
}

// HandleTimeIn applies the In predicate on the "handle_time" field.
func HandleTimeIn(vs ...time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldHandleTime, vs...))
}

// HandleTimeNotIn applies the NotIn predicate on the "handle_time" field.
func HandleTimeNotIn(vs ...time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldHandleTime, vs...))
}

// HandleTimeGT applies the GT predicate on the "handle_time" field.
func HandleTimeGT(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldHandleTime, v))
}

// HandleTimeGTE applies the GTE predicate on the "handle_time" field.
func HandleTimeGTE(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldHandleTime, v))
}

// HandleTimeLT applies the LT predicate on the "handle_time" field.
func HandleTimeLT(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldHandleTime, v))
}

// HandleTimeLTE applies the LTE predicate on the "handle_time" field.
func HandleTimeLTE(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldHandleTime, v))
}

// HandleTimeIsNil applies the IsNil predicate on the "handle_time" field.
func HandleTimeIsNil() predicate.Transfer {
	return predicate.Transfer(sql.FieldIsNull(FieldHandleTime))
}

// HandleTimeNotNil applies the NotNil predicate on the "handle_time" field.
func HandleTimeNotNil() predicate.Transfer {
	return predicate.Transfer(sql.FieldNotNull(FieldHandleTime))
}

// GasEQ applies the EQ predicate on the "gas" field.
func GasEQ(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldGas, v))
}

// GasNEQ applies the NEQ predicate on the "gas" field.
func GasNEQ(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldGas, v))
}

// GasIn applies the In predicate on the "gas" field.
func GasIn(vs ...int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldGas, vs...))
}

// GasNotIn applies the NotIn predicate on the "gas" field.
func GasNotIn(vs ...int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldGas, vs...))
}

// GasGT applies the GT predicate on the "gas" field.
func GasGT(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldGas, v))
}

// GasGTE applies the GTE predicate on the "gas" field.
func GasGTE(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldGas, v))
}

// GasLT applies the LT predicate on the "gas" field.
func GasLT(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldGas, v))
}

// GasLTE applies the LTE predicate on the "gas" field.
func GasLTE(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldGas, v))
}

// GasPriceEQ applies the EQ predicate on the "gas_price" field.
func GasPriceEQ(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldGasPrice, v))
}

// GasPriceNEQ applies the NEQ predicate on the "gas_price" field.
func GasPriceNEQ(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldGasPrice, v))
}

// GasPriceIn applies the In predicate on the "gas_price" field.
func GasPriceIn(vs ...int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldGasPrice, vs...))
}

// GasPriceNotIn applies the NotIn predicate on the "gas_price" field.
func GasPriceNotIn(vs ...int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldGasPrice, vs...))
}

// GasPriceGT applies the GT predicate on the "gas_price" field.
func GasPriceGT(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldGasPrice, v))
}

// GasPriceGTE applies the GTE predicate on the "gas_price" field.
func GasPriceGTE(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldGasPrice, v))
}

// GasPriceLT applies the LT predicate on the "gas_price" field.
func GasPriceLT(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldGasPrice, v))
}

// GasPriceLTE applies the LTE predicate on the "gas_price" field.
func GasPriceLTE(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldGasPrice, v))
}

// NonceEQ applies the EQ predicate on the "nonce" field.
func NonceEQ(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldNonce, v))
}

// NonceNEQ applies the NEQ predicate on the "nonce" field.
func NonceNEQ(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldNonce, v))
}

// NonceIn applies the In predicate on the "nonce" field.
func NonceIn(vs ...int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldNonce, vs...))
}

// NonceNotIn applies the NotIn predicate on the "nonce" field.
func NonceNotIn(vs ...int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldNonce, vs...))
}

// NonceGT applies the GT predicate on the "nonce" field.
func NonceGT(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldNonce, v))
}

// NonceGTE applies the GTE predicate on the "nonce" field.
func NonceGTE(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldNonce, v))
}

// NonceLT applies the LT predicate on the "nonce" field.
func NonceLT(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldNonce, v))
}

// NonceLTE applies the LTE predicate on the "nonce" field.
func NonceLTE(v int64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldNonce, v))
}

// HexEQ applies the EQ predicate on the "hex" field.
func HexEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldHex, v))
}

// HexNEQ applies the NEQ predicate on the "hex" field.
func HexNEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldHex, v))
}

// HexIn applies the In predicate on the "hex" field.
func HexIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldHex, vs...))
}

// HexNotIn applies the NotIn predicate on the "hex" field.
func HexNotIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldHex, vs...))
}

// HexGT applies the GT predicate on the "hex" field.
func HexGT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldHex, v))
}

// HexGTE applies the GTE predicate on the "hex" field.
func HexGTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldHex, v))
}

// HexLT applies the LT predicate on the "hex" field.
func HexLT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldHex, v))
}

// HexLTE applies the LTE predicate on the "hex" field.
func HexLTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldHex, v))
}

// HexContains applies the Contains predicate on the "hex" field.
func HexContains(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContains(FieldHex, v))
}

// HexHasPrefix applies the HasPrefix predicate on the "hex" field.
func HexHasPrefix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasPrefix(FieldHex, v))
}

// HexHasSuffix applies the HasSuffix predicate on the "hex" field.
func HexHasSuffix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasSuffix(FieldHex, v))
}

// HexEqualFold applies the EqualFold predicate on the "hex" field.
func HexEqualFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEqualFold(FieldHex, v))
}

// HexContainsFold applies the ContainsFold predicate on the "hex" field.
func HexContainsFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContainsFold(FieldHex, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Transfer) predicate.Transfer {
	return predicate.Transfer(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Transfer) predicate.Transfer {
	return predicate.Transfer(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Transfer) predicate.Transfer {
	return predicate.Transfer(sql.NotPredicates(p))
}
